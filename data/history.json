{
    "cam": [
        "ids.map(id => gp[id][0])",
        "InvalidationQueue.d()",
        "DataIntegStatus.fgd()",
        "ev.tuples.map(t => t.cells[0].obj.id)",
        "Unit.fg()",
        "FileSourceCollection.d()",
        "[1,2,3].reverse()",
        "'24:3'.split(\":\").join(\"hr \") + \"m\"",
        "Cassandra.fetch",
        "Cluster.d()",
        "JS.exec(\"'1,23,4'.replace(',','')\")",
        "_.range(0,7,1).map(i => DateTime.now().plusDays(-i).toString());",
        "Cassandra.d()",
        "Duration.fromString(\"24h24m\").toString()",
        "C3.app().nodes()",
        "Duration.fromString(\"24h\") + Duration.fromString(\"24m\")",
        "Duration.fromString(\"24h24m\").milliseconds()",
        "JS.exec(\"'1,234'.replaceAll(',','')\")",
        "ev.tuples.pluck(\"cells[0]\")",
        "_.sum",
        "Duration.make({m_ms: 1468800000}).toString()",
        "ev.tuples.pluck(\"cells\").pluck(\"0\")",
        "a = 1",
        "SqlSourceSystem.d()",
        "SourceStatus.fgd()",
        "returnObjs",
        "Duration.fromString(\"24h:2m\")",
        "UiSdlSavedSearch.d()",
        "JS.exec(\"'1,23,4'.replace(/,/g,'')\")",
        "C3.app(').nodes()",
        "Unit.fg({filter: \"contains(name, 'hour')\")",
        "copy(returnedObjs.objs)",
        "\"1,091:00\".replaceAll(',','')",
        "SourceStatus.fg()",
        "KvStore.d()",
        "ids.map(id => gp[id])",
        "TestApi.d()",
        "Duration.fromString(\"24\")",
        "ids.map(id => gp[id]?[0])",
        "SourceCollection.d()",
        "Cassandra.config()",
        "(Duration.fromString(\"24h\") + Duration.fromString(\"24m\"))",
        "_.size([1,23])",
        "Duration.d()",
        "c3Make(\"Duration\", {ms: 1000})",
        "UiSdlFilterPanel.d()",
        "FileSourceCollection.fg()",
        "temp1",
        "Duration.make({m_ms: 1468800000})",
        "ResourceGovernorConfig.inst().setConfig(\"queues.maxConcurrentComputes\", 3, ConfigOverride.TAG)",
        "ResourceGovernorConfig.inst().setConfigValue(\"queues.maxConcurrentComputes\", 3, ConfigOverride.TAG)",
        "Lambda.d()",
        "File.d()",
        "Duration.fromString(\"24h 25m\")",
        "InvalidationQueue.resume()",
        "ev.tuples.pluck(\"cells[0].obj\")",
        "parseDuration(\"24:00\")",
        "Duration.fromString(\"24h24m\").milleseconds()",
        "SqlSourceSystem.fg()",
        "'24:00'.split(\":\").join(\"hr \") + \"m\"",
        "SourceFile.fgd()",
        "_.zip([1,2,3],[4,5,6])",
        "_.range(0,7,1).map(i => DateTime.now().plusDays(-i));",
        "JS.exec(\"'1,234'.replace(',','')\")",
        "ResourceGovernorConfig.inst().setConfig",
        "var nodePoolCount = 1\nvar nodePoolName = 'task'\nvar targetNodeCount = nodePoolCount\nvar roles = [ Server.Role.TASK ]\nvar app = C3.app()// Cluster.env(\"ey\").app(\"eyesg\")\napp.configureNodePool(nodePoolName, targetNodeCount, nodePoolCount, nodePoolCount, App.NodePool.forName(nodePoolName).config().hardwareProfile, roles, false)\napp.nodePool(nodePoolName).start()",
        "C3.app().nodes().g()",
        "c3Make(\"Duration\", {m_ms: 1000})",
        "Unit.fg({filter: \"contains(name, 'hour')\"})",
        "ResourceGovernorConfig.inst()",
        "{a:3}",
        "Duration.fromString(\"24:00\")",
        "function parseDuration(duration) {\n  if (!duration){\n    return null;\n  }\n  return Duration.fromString(duration.split(\":\").join(\"hr \") + \"m\");\n}",
        "parseDuration(\"24:3\").toString()",
        "ids = ev.tuples.map(t => t.cells[0].obj.id)",
        "Duration.fromString(\"24h\")",
        "ev.tuples.pluck(\"cells\")",
        "Cassandra.get()",
        "ExpressionEngineFunction.d()",
        "C3.app(\"\").nodes()",
        "parseDuration(\"24:00\").toString()",
        "FileSourceCollection.fgd()",
        "ids.map(id => gp[id]?.[0])",
        "copy(returnObjs.objs)",
        "Persistable.d()",
        "ev.tuples.pluck(\"cells.0\")",
        "_.uniq([1,2,3333,3333,4,2])",
        "Duration.fromString(\"24h24m\")",
        "Cassandra.make().getConfig()",
        "alertFilter",
        "Sources.d()",
        "Duration.fromJson({s: 2})",
        "Cassandra.make().config()",
        "SourceStatus.removeAll()"
    ]
}